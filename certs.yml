- hosts: ["masters", "coordinating", "data"]
  become: yes
  tasks:
    - name: Check if the file already has an ansible managed block for xpack
      lineinfile:
        path: /etc/elasticsearch/elasticsearch.yml
        regexp: 'add xpack ANSIBLE MANAGED BLOCK'
        state: absent
      check_mode: yes
      changed_when: false
      register: out
    - name: adding the lines of xpack in the config file
      blockinfile: 
        state: present
        insertafter: EOF
        dest: /etc/elasticsearch/elasticsearch.yml
        marker: "# add xpack ANSIBLE MANAGED BLOCK"
        content: |
          xpack.security.http.ssl.verification_mode: certificate
      when: not out.found
    - name: restarting ES node
      service: 
        name: elasticsearch.service
        state: restarted
        enabled: yes
    - name: set new password for kibana
      uri:
        user: "{{ elastic_superuser }}"
        password: "{{ elastic_bootstrappass }}"
        validate_certs: no
        status_code: 200
        url: https://{{ ansible_default_ipv4.address }}:9200/_xpack/security/user/kibana_system/_password
        method: POST
        body_format: json
        body: '{"password":"{{ kibana_password }}"}'
      run_once: true
    - name: set new password for apm_system
      uri:
        user: "{{ elastic_superuser }}"
        password: "{{ elastic_bootstrappass }}"
        validate_certs: no
        status_code: 200
        url: https://{{ ansible_default_ipv4.address }}:9200/_xpack/security/user/apm_system/_password
        method: POST
        body_format: json
        body: '{"password":"{{ apm_userpass }}"}'
      run_once: true
    - name: set new password for remote_monitoring_user
      uri:
        user: "{{ elastic_superuser }}"
        password: "{{ elastic_bootstrappass }}"
        validate_certs: no
        status_code: 200
        url: https://{{ ansible_default_ipv4.address }}:9200/_xpack/security/user/remote_monitoring_user/_password
        method: POST
        body_format: json
        body: '{"password":"{{ monitoring_userpass }}"}'
      run_once: true
    - name: set new password for beats_system
      uri:
        user: "{{ elastic_superuser }}"
        password: "{{ elastic_bootstrappass }}"
        validate_certs: no
        status_code: 200
        url: https://{{ ansible_default_ipv4.address }}:9200/_xpack/security/user/beats_system/_password
        method: POST
        body_format: json
        body: '{"password":"{{ beats_userpass }}"}'
      run_once: true
    - name: set new password for logstash_system
      uri:
        user: "{{ elastic_superuser }}"
        password: "{{ elastic_bootstrappass }}"
        validate_certs: no
        status_code: 200
        url: https://{{ ansible_default_ipv4.address }}:9200/_xpack/security/user/logstash_system/_password
        method: POST
        body_format: json
        body: '{"password":"{{ logstash_userpass }}"}'
      run_once: true
    - name: resetting the super user password to provided value
      uri:
        user: "{{ elastic_superuser }}"
        password: "{{ elastic_bootstrappass }}"
        validate_certs: no
        status_code: 200
        url: https://{{ ansible_default_ipv4.address }}:9200/_xpack/security/user/elastic/_password
        method: POST
        body_format: json
        body: '{"password":"{{ elastic_superuserpass }}"}'
      run_once: true
    - name: restarting ES node
      service: 
        name: elasticsearch.service
        state: restarted
        enabled: yes


- hosts: ["kibana"]
  become: yes
  tasks:
    - name: making cert directory
      file:
        path: /etc/kibana/certs
        state: directory
        mode: '0777'
    - name: copying file with owner and permissions
      copy:
        src: "{{ kibana_ca_cert }}"
        dest: /etc/kibana/certs/ca.pem
        owner: kibana
        group: kibana
        mode: 0644
    - name: Check if the file already has an ansible managed block for xpack
      lineinfile:
        path: /etc/kibana/kibana.yml
        regexp: 'add xpack ANSIBLE MANAGED BLOCK'
        state: absent
      check_mode: yes
      changed_when: false
      register: out
    - name: adding the lines of xpack in the config file
      blockinfile: 
        state: present
        insertafter: EOF
        dest: /etc/kibana/kibana.yml
        marker: "# add xpack ANSIBLE MANAGED BLOCK"
        content: |
          elasticsearch.username: {{ kibana_es_user }}
          elasticsearch.password: {{ kibana_password }}
          elasticsearch.ssl.certificateAuthorities: /etc/kibana/certs/ca.pem
          elasticsearch.ssl.verificationMode: certificate
          xpack.encryptedSavedObjects.encryptionKey: '{{ kibana_encryption_key }}'
      when: not out.found
    
    - name: check if https line exists
      lineinfile:
        path: /etc/kibana/kibana.yml
        regexp: '(^elasticsearch.hosts.*.https://)'
        state: absent
      check_mode: yes
      changed_when: false
      register: out
    - name: if not comment the line with http elasticsearch hosts
      lineinfile:
          path: /etc/kibana/kibana.yml
          regexp: '(^elasticsearch.hosts.*)'
          line: '# \1'
          backrefs: yes
          state: present
      when: not out.found
    - name: add an https line in kibana yml
      lineinfile:
        path: /etc/kibana/kibana.yml
        insertbefore: '# elasticsearch.hosts.*'
        line: "elasticsearch.hosts: {{ groups['coordinating'] | map('regex_replace', '^(.*)$','https://\\1:9200') | list  }}"
        state: present
    - name: restarting kibana service
      service: 
        name: kibana.service
        state: restarted
        enabled: yes
